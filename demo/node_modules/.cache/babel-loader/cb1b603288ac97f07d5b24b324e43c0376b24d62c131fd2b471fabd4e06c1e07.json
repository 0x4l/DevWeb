{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\DevWeb\\\\foro-react\\\\src\\\\components\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments() {\n  _s();\n  const [comments, setComments] = useState([]);\n\n  // Definimos loadComments usando useCallback para evitar que cambie en cada renderizado\n  const loadComments = useCallback(async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, 'comments'));\n      const commentsData = querySnapshot.docs.map(doc => doc.data());\n      setComments(commentsData);\n    } catch (error) {\n      console.error(\"Error loading comments: \", error);\n    }\n  }, []); // [] asegura que la función no cambia\n\n  // Llamamos a loadComments cuando el componente se monta\n  useEffect(() => {\n    loadComments();\n  }, [loadComments]); // Incluimos loadComments como dependencia\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comentarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: comment.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), \": \", comment.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"RIXdmSpt9WXFXm+Vxo9wyhRVgf4=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","collection","getDocs","db","jsxDEV","_jsxDEV","Comments","_s","comments","setComments","loadComments","querySnapshot","commentsData","docs","map","doc","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","comment","index","author","text","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/DevWeb/foro-react/src/components/Comments.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nfunction Comments() {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  // Definimos loadComments usando useCallback para evitar que cambie en cada renderizado\r\n  const loadComments = useCallback(async () => {\r\n    try {\r\n      const querySnapshot = await getDocs(collection(db, 'comments'));\r\n      const commentsData = querySnapshot.docs.map((doc) => doc.data());\r\n      setComments(commentsData);\r\n    } catch (error) {\r\n      console.error(\"Error loading comments: \", error);\r\n    }\r\n  }, []); // [] asegura que la función no cambia\r\n\r\n  // Llamamos a loadComments cuando el componente se monta\r\n  useEffect(() => {\r\n    loadComments(); \r\n  }, [loadComments]); // Incluimos loadComments como dependencia\r\n\r\n  return (\r\n    <div>\r\n      <h2>Comentarios</h2>\r\n      <ul>\r\n        {comments.map((comment, index) => (\r\n          <li key={index}>\r\n            <strong>{comment.author}</strong>: {comment.text}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,SAASC,EAAE,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMU,YAAY,GAAGZ,WAAW,CAAC,YAAY;IAC3C,IAAI;MACF,MAAMa,aAAa,GAAG,MAAMT,OAAO,CAACD,UAAU,CAACE,EAAE,EAAE,UAAU,CAAC,CAAC;MAC/D,MAAMS,YAAY,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;MAChEP,WAAW,CAACG,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACAlB,SAAS,CAAC,MAAM;IACdW,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEpB,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA;MAAAc,QAAA,EACGX,QAAQ,CAACM,GAAG,CAAC,CAACU,OAAO,EAAEC,KAAK,kBAC3BpB,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,EAASK,OAAO,CAACE;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACC,OAAO,CAACG,IAAI;MAAA,GADzCF,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CA/BQD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}