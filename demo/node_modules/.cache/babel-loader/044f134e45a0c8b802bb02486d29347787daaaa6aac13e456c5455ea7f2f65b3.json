{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\DevWeb\\\\foro-react\\\\src\\\\components\\\\Forum.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { collection, addDoc, getDocs, orderBy, query } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport Comments from './Comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forum() {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [newThreadTitle, setNewThreadTitle] = useState('');\n  const [newThreadContent, setNewThreadContent] = useState('');\n\n  // Función para cargar los hilos del foro desde Firestore\n  const loadThreads = async () => {\n    try {\n      const q = query(collection(db, 'threads'), orderBy('createdAt', 'desc'));\n      const querySnapshot = await getDocs(q);\n      const threadsData = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setThreads(threadsData);\n    } catch (error) {\n      console.error('Error loading threads: ', error);\n    }\n  };\n  useEffect(() => {\n    loadThreads(); // Cargamos los hilos cuando el componente se monta\n  }, []);\n\n  // Función para crear un nuevo hilo\n  const createThread = async () => {\n    if (!newThreadTitle || !newThreadContent) {\n      alert('Por favor, llena ambos campos para crear un nuevo hilo.');\n      return;\n    }\n    try {\n      await addDoc(collection(db, 'threads'), {\n        title: newThreadTitle,\n        content: newThreadContent,\n        createdAt: new Date()\n      });\n      setNewThreadTitle('');\n      setNewThreadContent('');\n      loadThreads(); // Recargar los hilos después de crear uno nuevo\n    } catch (error) {\n      console.error('Error creating thread: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Foro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEDtulo del hilo\",\n        value: newThreadTitle,\n        onChange: e => setNewThreadTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Contenido del hilo\",\n        value: newThreadContent,\n        onChange: e => setNewThreadContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createThread,\n        children: \"Crear hilo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hilos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), threads.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: thread.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: thread.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Comments, {\n            threadId: thread.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, thread.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay hilos en el foro todav\\xEDa.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Forum, \"iKCcj+3T6czZN7iEXEDLCFCWoGQ=\");\n_c = Forum;\nexport default Forum;\nvar _c;\n$RefreshReg$(_c, \"Forum\");","map":{"version":3,"names":["React","useEffect","useState","collection","addDoc","getDocs","orderBy","query","db","Comments","jsxDEV","_jsxDEV","Forum","_s","threads","setThreads","newThreadTitle","setNewThreadTitle","newThreadContent","setNewThreadContent","loadThreads","q","querySnapshot","threadsData","docs","map","doc","id","data","error","console","createThread","alert","title","content","createdAt","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","thread","threadId","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/DevWeb/foro-react/src/components/Forum.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { collection, addDoc, getDocs, orderBy, query } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport Comments from './Comments';\r\n\r\nfunction Forum() {\r\n  const [threads, setThreads] = useState([]);\r\n  const [newThreadTitle, setNewThreadTitle] = useState('');\r\n  const [newThreadContent, setNewThreadContent] = useState('');\r\n\r\n  // Función para cargar los hilos del foro desde Firestore\r\n  const loadThreads = async () => {\r\n    try {\r\n      const q = query(collection(db, 'threads'), orderBy('createdAt', 'desc'));\r\n      const querySnapshot = await getDocs(q);\r\n      const threadsData = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setThreads(threadsData);\r\n    } catch (error) {\r\n      console.error('Error loading threads: ', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadThreads(); // Cargamos los hilos cuando el componente se monta\r\n  }, []);\r\n\r\n  // Función para crear un nuevo hilo\r\n  const createThread = async () => {\r\n    if (!newThreadTitle || !newThreadContent) {\r\n      alert('Por favor, llena ambos campos para crear un nuevo hilo.');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      await addDoc(collection(db, 'threads'), {\r\n        title: newThreadTitle,\r\n        content: newThreadContent,\r\n        createdAt: new Date(),\r\n      });\r\n      setNewThreadTitle('');\r\n      setNewThreadContent('');\r\n      loadThreads(); // Recargar los hilos después de crear uno nuevo\r\n    } catch (error) {\r\n      console.error('Error creating thread: ', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Foro</h2>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Título del hilo\"\r\n          value={newThreadTitle}\r\n          onChange={(e) => setNewThreadTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Contenido del hilo\"\r\n          value={newThreadContent}\r\n          onChange={(e) => setNewThreadContent(e.target.value)}\r\n        />\r\n        <button onClick={createThread}>Crear hilo</button>\r\n      </div>\r\n      \r\n      <div>\r\n        <h3>Hilos</h3>\r\n        {threads.length > 0 ? (\r\n          <ul>\r\n            {threads.map((thread) => (\r\n              <li key={thread.id}>\r\n                <h4>{thread.title}</h4>\r\n                <p>{thread.content}</p>\r\n                {/* Aquí se puede integrar el componente de comentarios por hilo */}\r\n                <Comments threadId={thread.id} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No hay hilos en el foro todavía.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forum;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}