{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\DevWeb\\\\foro-react\\\\src\\\\components\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { collection, addDoc, getDocs, orderBy, query, where } from 'firebase/firestore'; // Asegúrate de que estén todos los imports necesarios\nimport { db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments({\n  threadId,\n  currentUser\n}) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n\n  // Función para cargar los comentarios del hilo actual\n  const loadComments = async () => {\n    const commentsCollection = collection(db, 'comments');\n    const q = query(commentsCollection, where('threadId', '==', threadId), orderBy('timestamp', 'desc')); // Filtra por el hilo actual\n    const querySnapshot = await getDocs(q);\n    const commentsData = querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setComments(commentsData);\n  };\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (newComment.trim() === '') return;\n    await addDoc(collection(db, 'comments'), {\n      text: newComment,\n      author: currentUser,\n      timestamp: new Date(),\n      threadId: threadId\n    });\n    setNewComment('');\n    loadComments();\n  };\n  useEffect(() => {}, [threadId][loadComments]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comentarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Escribe un comentario...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: comment.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), \": \", comment.text]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","useState","collection","addDoc","getDocs","orderBy","query","where","db","jsxDEV","_jsxDEV","Comments","threadId","currentUser","_s","comments","setComments","newComment","setNewComment","loadComments","commentsCollection","q","querySnapshot","commentsData","docs","map","doc","id","data","handleCommentSubmit","e","preventDefault","trim","text","author","timestamp","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","comment","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/DevWeb/foro-react/src/components/Comments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { collection, addDoc, getDocs, orderBy, query, where } from 'firebase/firestore'; // Asegúrate de que estén todos los imports necesarios\r\nimport { db } from '../firebase';\r\n\r\nfunction Comments({ threadId, currentUser }) {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  // Función para cargar los comentarios del hilo actual\r\n  const loadComments = async () => {\r\n    const commentsCollection = collection(db, 'comments');\r\n    const q = query(commentsCollection, where('threadId', '==', threadId), orderBy('timestamp', 'desc')); // Filtra por el hilo actual\r\n    const querySnapshot = await getDocs(q);\r\n    const commentsData = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    setComments(commentsData);\r\n  };\r\n\r\n  \r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newComment.trim() === '') return; \r\n\r\n    await addDoc(collection(db, 'comments'), {\r\n      text: newComment,\r\n      author: currentUser, \r\n      timestamp: new Date(),\r\n      threadId: threadId, \r\n    });\r\n\r\n    setNewComment('');\r\n    loadComments(); \r\n  };\r\n\r\n  useEffect(() => {\r\n  }, [threadId][loadComments]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Comentarios</h2>\r\n      <form onSubmit={handleCommentSubmit}>\r\n        <textarea\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n          placeholder=\"Escribe un comentario...\"\r\n        />\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n      <ul>\r\n        {comments.map(comment => (\r\n          <li key={comment.id}>\r\n            <strong>{comment.author}</strong>: {comment.text}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}