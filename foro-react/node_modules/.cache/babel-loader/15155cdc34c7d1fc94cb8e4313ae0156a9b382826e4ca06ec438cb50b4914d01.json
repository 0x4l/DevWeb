{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\DevWeb\\\\foro-react\\\\src\\\\components\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { collection, addDoc, getDocs, query, orderBy } from 'firebase/firestore';\nimport { auth, db } from '../firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments({\n  threadId\n}) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [user] = useAuthState(auth); // Estado del usuario autenticado\n\n  const loadComments = useCallback(async () => {\n    try {\n      const q = query(collection(db, 'threads', threadId, 'comments'), orderBy('createdAt', 'desc'));\n      const querySnapshot = await getDocs(q);\n      const commentsData = querySnapshot.docs.map(doc => doc.data());\n      setComments(commentsData);\n    } catch (error) {\n      console.error(\"Error loading comments: \", error);\n    }\n  }, [threadId]);\n  useEffect(() => {\n    loadComments();\n  }, [loadComments]);\n\n  // Función para agregar un nuevo comentario\n  const addComment = async () => {\n    if (!newComment) {\n      alert('Por favor, escribe un comentario.');\n      return;\n    }\n    if (!user) {\n      alert('Debes iniciar sesión para comentar.');\n      return;\n    }\n    try {\n      await addDoc(collection(db, 'threads', threadId, 'comments'), {\n        text: newComment,\n        createdBy: user.displayName || user.email,\n        // Guardamos el nombre del usuario o el correo\n        createdAt: new Date()\n      });\n      setNewComment('');\n      loadComments(); // Recargar los comentarios después de agregar uno nuevo\n    } catch (error) {\n      console.error('Error adding comment: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comentarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Por:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }, this), \" \", comment.createdBy]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Escribe tu comentario\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addComment,\n        children: \"Agregar comentario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Por favor, inicia sesi\\xF3n para agregar un comentario.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"GHJUd6nuI8izctm3WulVSzCCxmg=\", false, function () {\n  return [useAuthState];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","collection","addDoc","getDocs","query","orderBy","auth","db","useAuthState","jsxDEV","_jsxDEV","Comments","threadId","_s","comments","setComments","newComment","setNewComment","user","loadComments","q","querySnapshot","commentsData","docs","map","doc","data","error","console","addComment","alert","text","createdBy","displayName","email","createdAt","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","comment","index","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/DevWeb/foro-react/src/components/Comments.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { collection, addDoc, getDocs, query, orderBy } from 'firebase/firestore';\r\nimport { auth, db } from '../firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nfunction Comments({ threadId }) {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [user] = useAuthState(auth); // Estado del usuario autenticado\r\n\r\n  const loadComments = useCallback(async () => {\r\n    try {\r\n      const q = query(collection(db, 'threads', threadId, 'comments'), orderBy('createdAt', 'desc'));\r\n      const querySnapshot = await getDocs(q);\r\n      const commentsData = querySnapshot.docs.map((doc) => doc.data());\r\n      setComments(commentsData);\r\n    } catch (error) {\r\n      console.error(\"Error loading comments: \", error);\r\n    }\r\n  }, [threadId]);\r\n\r\n  useEffect(() => {\r\n    loadComments();\r\n  }, [loadComments]);\r\n\r\n  // Función para agregar un nuevo comentario\r\n  const addComment = async () => {\r\n    if (!newComment) {\r\n      alert('Por favor, escribe un comentario.');\r\n      return;\r\n    }\r\n    if (!user) {\r\n      alert('Debes iniciar sesión para comentar.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await addDoc(collection(db, 'threads', threadId, 'comments'), {\r\n        text: newComment,\r\n        createdBy: user.displayName || user.email, // Guardamos el nombre del usuario o el correo\r\n        createdAt: new Date(),\r\n      });\r\n      setNewComment('');\r\n      loadComments(); // Recargar los comentarios después de agregar uno nuevo\r\n    } catch (error) {\r\n      console.error('Error adding comment: ', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Comentarios</h4>\r\n      <ul>\r\n        {comments.map((comment, index) => (\r\n          <li key={index}>\r\n            <p>{comment.text}</p>\r\n            <p><strong>Por:</strong> {comment.createdBy}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {user ? (\r\n        <div>\r\n          <textarea\r\n            placeholder=\"Escribe tu comentario\"\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n          />\r\n          <button onClick={addComment}>Agregar comentario</button>\r\n        </div>\r\n      ) : (\r\n        <p>Por favor, inicia sesión para agregar un comentario.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,SAASC,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO,QAAQ,oBAAoB;AAChF,SAASC,IAAI,EAAEC,EAAE,QAAQ,aAAa;AACtC,SAASC,YAAY,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,IAAI,CAAC,GAAGV,YAAY,CAACF,IAAI,CAAC,CAAC,CAAC;;EAEnC,MAAMa,YAAY,GAAGrB,WAAW,CAAC,YAAY;IAC3C,IAAI;MACF,MAAMsB,CAAC,GAAGhB,KAAK,CAACH,UAAU,CAACM,EAAE,EAAE,SAAS,EAAEK,QAAQ,EAAE,UAAU,CAAC,EAAEP,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;MAC9F,MAAMgB,aAAa,GAAG,MAAMlB,OAAO,CAACiB,CAAC,CAAC;MACtC,MAAME,YAAY,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;MAChEX,WAAW,CAACO,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEdb,SAAS,CAAC,MAAM;IACdoB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACb,UAAU,EAAE;MACfc,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;IACA,IAAI,CAACZ,IAAI,EAAE;MACTY,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACF;IAEA,IAAI;MACF,MAAM5B,MAAM,CAACD,UAAU,CAACM,EAAE,EAAE,SAAS,EAAEK,QAAQ,EAAE,UAAU,CAAC,EAAE;QAC5DmB,IAAI,EAAEf,UAAU;QAChBgB,SAAS,EAAEd,IAAI,CAACe,WAAW,IAAIf,IAAI,CAACgB,KAAK;QAAE;QAC3CC,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC,CAAC;MACFnB,aAAa,CAAC,EAAE,CAAC;MACjBE,YAAY,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB/B,OAAA;MAAA2B,QAAA,EACGvB,QAAQ,CAACU,GAAG,CAAC,CAACkB,OAAO,EAAEC,KAAK,kBAC3BjC,OAAA;QAAA2B,QAAA,gBACE3B,OAAA;UAAA2B,QAAA,EAAIK,OAAO,CAACX;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB/B,OAAA;UAAA2B,QAAA,gBAAG3B,OAAA;YAAA2B,QAAA,EAAQ;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACC,OAAO,CAACV,SAAS;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFzCE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAEJvB,IAAI,gBACHR,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QACEkC,WAAW,EAAC,uBAAuB;QACnCC,KAAK,EAAE7B,UAAW;QAClB8B,QAAQ,EAAGC,CAAC,IAAK9B,aAAa,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACF/B,OAAA;QAAQuC,OAAO,EAAEpB,UAAW;QAAAQ,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,gBAEN/B,OAAA;MAAA2B,QAAA,EAAG;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5B,EAAA,CAtEQF,QAAQ;EAAA,QAGAH,YAAY;AAAA;AAAA0C,EAAA,GAHpBvC,QAAQ;AAwEjB,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}